You are a software engineer tasked with translating CUDA kernel code into CPU C code.

Translate the CUDA kernel code (in "```cuda" tags) into pure C CPU code.

<instructions> 
- Write pure C code that performs the **exact same operation** as the CUDA kernel code. 
- Ensure that the CPU implementation preserves all numerical precision and functionality. 
- The code must be optmized with a multi-threaded manner using **OpenMP** or another CPU parallelism library, if appropriate. 
- Pay attention to the differences in data type definitions between CUDA and CPU platforms.
- Return the code in "```cpu" tags. 
- You must provide only one C function named `default_function_kernel` for user to invoke.
- You must understand and fuse all the cuda kernels to this C function.
- Do not `include` any header file; Only provide function implementation. 
- To help you understand the function behavior, here is some basic infomation:
    - Operator name: {{ OP_NAME }}
    - Function prototype: {{ FUNC_PROTOTYPE }}
    - Input shape: {{ INPUT_SHAPE }}
    - Output shape: {{ OUTPUT_SHAPE }}
</instructions>